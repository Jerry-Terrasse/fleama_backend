/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2023/10/13 17:36:16                          */
/*==============================================================*/


/*==============================================================*/
/* Table: cart                                                  */
/*==============================================================*/
create table cart
(
   user_id              int not null,
   item_id              int not null,
   cart_id              int not null,
   primary key (user_id, item_id)
);

/*==============================================================*/
/* Table: complaints                                            */
/*==============================================================*/
create table complaints
(
   complaint_id         int not null,
   user_id              int not null,
   order_id             int not null,
   session_id           int not null,
   complaint_state      numeric(2,0) not null,
   primary key (complaint_id)
);

/*==============================================================*/
/* Table: favorite                                              */
/*==============================================================*/
create table favorite
(
   user_id              int not null,
   item_id              int not null,
   favorite_id          int not null,
   primary key (user_id, item_id)
);

/*==============================================================*/
/* Table: items                                                 */
/*==============================================================*/
create table items
(
   item_id              int not null,
   user_id              int not null,
   item_name            varchar(10) not null,
   item_price           decimal(10,2) not null,
   item_state           numeric(2,0) not null,
   description          longtext,
   primary key (item_id)
);

/*==============================================================*/
/* Table: messages                                              */
/*==============================================================*/
create table messages
(
   message_id           int not null,
   user_id              int not null,
   session_id           int not null,
   message_content      longtext not null,
   primary key (message_id)
);

/*==============================================================*/
/* Table: orders                                                */
/*==============================================================*/
create table orders
(
   order_id             int not null,
   user_id              int not null,
   item_id              int not null,
   order_state          numeric(2,0) not null,
   primary key (order_id)
);

/*==============================================================*/
/* Table: sessions                                              */
/*==============================================================*/
create table sessions
(
   session_id           int not null,
   session_state        numeric(2,0) not null,
   primary key (session_id)
);

/*==============================================================*/
/* Table: user_session                                          */
/*==============================================================*/
create table user_session
(
   session_id           int not null,
   user_id              int not null,
   primary key (session_id, user_id)
);

/*==============================================================*/
/* Table: users                                                 */
/*==============================================================*/
create table users
(
   user_id              int not null,
   username             char(10) not null,
   password             varchar(20) not null,
   user_state           numeric(2,0) not null,
   primary key (user_id)
);

alter table cart add constraint FK_cart foreign key (item_id)
      references items (item_id) on delete restrict on update restrict;

alter table cart add constraint FK_cart2 foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;

alter table complaints add constraint FK_complaint_order foreign key (order_id)
      references orders (order_id) on delete restrict on update restrict;

alter table complaints add constraint FK_complaint_session foreign key (session_id)
      references sessions (session_id) on delete restrict on update restrict;

alter table complaints add constraint FK_user_complaint foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;

alter table favorite add constraint FK_favorite foreign key (item_id)
      references items (item_id) on delete restrict on update restrict;

alter table favorite add constraint FK_favorite2 foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;

alter table items add constraint FK_user_item foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;

alter table messages add constraint FK_message_user foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;

alter table messages add constraint FK_session_message foreign key (session_id)
      references sessions (session_id) on delete restrict on update restrict;

alter table orders add constraint FK_order_item foreign key (item_id)
      references items (item_id) on delete restrict on update restrict;

alter table orders add constraint FK_user_order foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;

alter table user_session add constraint FK_user_session foreign key (session_id)
      references sessions (session_id) on delete restrict on update restrict;

alter table user_session add constraint FK_user_session2 foreign key (user_id)
      references users (user_id) on delete restrict on update restrict;


alter table users modify user_id int not null auto_increment;
alter table cart modify cart_id int not null auto_increment;
alter table complaints modify complaint_id int not null auto_increment;
alter table favorite modify favorite_id int not null auto_increment;
alter table items modify item_id int not null auto_increment;
alter table messages modify message_id int not null auto_increment;
alter table orders modify order_id int not null auto_increment;
alter table sessions modify session_id int not null auto_increment;

create index FK_cart on cart (item_id);
create index FK_cart2 on cart (user_id);
create index FK_complaint_order on complaints (order_id);
create index FK_complaint_session on complaints (session_id);

CREATE VIEW `UserCartDetails` AS
SELECT 
  u.username,
  i.item_name,
  i.item_price,
  i.description,
  c.cart_id
FROM 
  cart c
  JOIN items i ON c.item_id = i.item_id
  JOIN users u ON c.user_id = u.user_id;


CREATE VIEW `UserOrderStatus` AS
SELECT 
  u.username,
  o.order_id,
  i.item_name,
  o.order_state
FROM 
  orders o
  JOIN users u ON o.user_id = u.user_id
  JOIN items i ON o.item_id = i.item_id;

DELIMITER $$

CREATE TRIGGER `SetInitialComplaintState`
BEFORE INSERT ON `complaints`
FOR EACH ROW
BEGIN
  SET NEW.complaint_state = 1;
END$$

DELIMITER ;


DELIMITER $$

CREATE FUNCTION `CalculateCartTotal`(userId INT) RETURNS DECIMAL(10,2)
BEGIN
  DECLARE cartTotal DECIMAL(10,2);

  -- 计算特定用户购物车中的物品总价
  SELECT SUM(item_price)
  INTO cartTotal
  FROM cart
  INNER JOIN items ON cart.item_id = items.item_id
  WHERE cart.user_id = userId;

  -- 如果没有商品或者总价为空，则返回0.00
  RETURN COALESCE(cartTotal, 0.00);
END$$

DELIMITER ;
